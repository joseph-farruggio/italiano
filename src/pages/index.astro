---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
---

<Layout title="Welcome to Astro.">
	<main x-data="words()">
		<h1 class="mt-4" x-text="selected.italiano"></h1>

		<div class="space-y-4">
			<Card>
				<span slot="title">Inglese</span>
				<p slot="body" x-text="selected.inglese"></p>
			</Card>
			<Card title="Frasi">
				<span slot="title">Frasi</span>
				<ul slot="body">
					<template x-for="sentence in selected.sentences">
						<li x-text="sentence"></li>
					</template>
				</ul>
			</Card>
		</div>
		<button
			class="bg-[#C15F3C] text-white p-4 rounded-lg mx-auto mt-12"
			@click=" newWord()">Nuova parola</button
		>
		<!-- <ul role="list" class="link-card-grid">
			<Card
				href="https://docs.astro.build/"
				title="Documentation"
				body="Learn how Astro works and explore the official API docs."
			/>
			<Card
				href="https://astro.build/integrations/"
				title="Integrations"
				body="Supercharge your project with new frameworks and libraries."
			/>
			<Card
				href="https://astro.build/themes/"
				title="Themes"
				body="Explore a galaxy of community-built starter themes."
			/>
			<Card
				href="https://astro.build/chat/"
				title="Community"
				body="Come say hi to our amazing Discord community. ❤️"
			/>
		</ul> -->
	</main>
</Layout>

<script>
	import vocabulary from "../data/words.json";

	document.addEventListener("alpine:init", () => {
		Alpine.data("words", () => ({
			words: vocabulary,
			selected: null,

			newWord() {
				this.selected =
					this.words[Math.floor(Math.random() * this.words.length)];
			},

			init() {
				// random word
				this.selected =
					this.words[Math.floor(Math.random() * this.words.length)];
			},
		}));
	});
</script>
<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(
			rgba(var(--accent-dark), 66%),
			rgba(var(--accent-dark), 33%)
		);
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>

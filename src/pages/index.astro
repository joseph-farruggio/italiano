---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
---

<Layout title="Imparare l'Italiano.">
	<main x-data="words()">
		<h1 class="mt-4 min-h-[70px]" x-text="selected.italiano"></h1>

		<div class="space-y-4">
			<div class="bg-[#393937] p-4 rounded-lg">
				<button
					class="flex items-center justify-between w-full text-white/50"
					@click="definitionOpen = !definitionOpen">
					<span>Inglese</span>
					<svg
						xmlns="http://www.w3.org/2000/svg"
						viewBox="0 0 20 20"
						fill="currentColor"
						class="size-8 transition-transform"
						:class="open && 'rotate-180'">
						<path
							fill-rule="evenodd"
							d="M5.22 8.22a.75.75 0 0 1 1.06 0L10 11.94l3.72-3.72a.75.75 0 1 1 1.06 1.06l-4.25 4.25a.75.75 0 0 1-1.06 0L5.22 9.28a.75.75 0 0 1 0-1.06Z"
							clip-rule="evenodd"></path>
					</svg>
				</button>

				<div class="mt-4" x-cloak x-show="definitionOpen">
					<p x-text="selected.inglese"></p>
				</div>
			</div>

			<div class="bg-[#393937] p-4 rounded-lg">
				<button
					class="flex items-center justify-between w-full text-white/50"
					@click="sentencesOpen = !sentencesOpen">
					<span>Frasi</span>
					<svg
						xmlns="http://www.w3.org/2000/svg"
						viewBox="0 0 20 20"
						fill="currentColor"
						class="size-8 transition-transform"
						:class="open && 'rotate-180'">
						<path
							fill-rule="evenodd"
							d="M5.22 8.22a.75.75 0 0 1 1.06 0L10 11.94l3.72-3.72a.75.75 0 1 1 1.06 1.06l-4.25 4.25a.75.75 0 0 1-1.06 0L5.22 9.28a.75.75 0 0 1 0-1.06Z"
							clip-rule="evenodd"></path>
					</svg>
				</button>

				<div class="mt-4" x-cloak x-show="sentencesOpen">
					<ul slot="body">
						<template x-for="sentence in selected.sentences">
							<li x-text="sentence"></li>
						</template>
					</ul>
				</div>
			</div>
		</div>
		<button
			class="bg-[#C15F3C] text-white p-4 rounded-lg mx-auto mt-12"
			@click=" newWord()">Nuova parola</button
		>
	</main>
</Layout>

<script>
	import vocabulary from "../data/words.json";

	document.addEventListener("alpine:init", () => {
		Alpine.data("words", () => ({
			words: vocabulary,
			selected: null,

			definitionOpen: false,
			sentencesOpen: false,

			newWord() {
				this.selected =
					this.words[Math.floor(Math.random() * this.words.length)];
				this.definitionOpen = false;
				this.sentencesOpen = false;
			},

			init() {
				// random word
				this.selected =
					this.words[Math.floor(Math.random() * this.words.length)];
			},
		}));
	});
</script>
<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(
			rgba(var(--accent-dark), 66%),
			rgba(var(--accent-dark), 33%)
		);
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>
